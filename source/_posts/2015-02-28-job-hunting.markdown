---
layout: post
title: "求职美国"
date: 2015-02-28 00:33:11 +0800
comments: true
categories: 
---

人生路漫漫，走到哪一步都有随机感。实在没想到我这个曾经信誓旦旦“坚决不去国外就业”的爱国青年有一天也会选择海外就业，而一切都来得那么突然。在Intel已经有两年了，备受老板的青睐和信任，走出这一步也实属不易。辜负了老板的栽培，是在是万分愧疚。然而，永远不变的就是改变。或许再见的时刻已经到来。

## Part 1，快乐的2013

本人从小就胸无大志，加之头脑不灵光，还有点内向，因此一直以来都有点呆。但是这种人是否后天会有逆反心理？我感觉自己研究生之前一直是乖孩子，就算是翘课什么的本性也是好的，跟老师关系都很好，在同学中间也很有人缘，好友成群。读研之后不知为啥，跟老师的关系一直处不好，也不想再跟后来的同学们好好相处，感觉心累了，于是自己过自己的，偷偷出去实习什么的，也不能跟别人乱说，也见不到同学，就算见到了也感觉没什么好说的。所以我感觉整个研究生生涯就是给我提供了一个睡觉的地方。

实习很快乐，还有钱可赚，总算是经济自由了，养自己没啥问题。至于做什么嘛，基本上mentor说做啥就做啥，从来不会有别的意见和想法。就这样匆匆走过了三家公司。学到了很多学校里学不到的，也得到了一些职场的人脉。

2013年的春节，那时我才研二。某天，好友给我发来邮件，问我有家研究院招实习生，要不要去。彼时还在爱奇艺做推荐系统。可能是我性格比较跳脱，觉得换一换也好，迎接一些不同的挑战，就很对不起mentor走人了。春节后回京，得知“这家研究院”是英特尔研究院。当时的梦想是微软亚洲研究院，没听说过英特尔中国研究院。无奈当时水平有限，MSRA面试被拒，豆瓣面试被拒，hulu也被拒。于是来Intel面试。当时感觉Intel是个很高大上的地方，面试感觉也不错，于是就在2013年的春天加入了英特尔。

当时第一个项目是做一个卖东西推荐系统。正好我在学校的时候论文也是研究相关方面的，入职后就开始研究Mahout。主要研究了其中的ALS算法啊，并且按照我设计的一个机器学习算法改写了。当然，当时我完全不懂系统架构之类的，也不知数据预处理和系统服务建设，只是简单地修改了一个算法。但是身在一个大数据team，当时Intel已经暴漏出其不足：没有数据。因此，我当时完全是在自娱自乐，学习算法。

大概一个月之后，team新加了三个小伙伴，他们三个都非常强，而且都是目标清晰心志坚定的那种人。大家年龄相仿，最大最小差距不到6岁，同时都非常热爱技术，又来自不同的方向，很快蹭出火花。是的，蹭出来的就是Spark。某一天，大老板给我们全员科普了Scala语言，我们四个实习生很快就转向Spark的研究。当时我们几个人火力很猛，基本上都是7*14工作的。边写论文边搞Spark。Mahout当时感觉也没什么希望，就放一边了，确实也太复杂了，不好用。这期间还穿插着一个NativeTask，暂且不表。

2013年8月份的时候，大老板带我们去蹭大数据的会，会场上解释了很多牛人，像明风，crazyJVM，Reynold等都是那时候见得。大老板待我们不薄，一直想把我们推出去，增强我们的visibility。当时在会场我们还组织了一个Scala研学社，不会后来没有花时间维护了，因为每个人都有很多事情要做。

由于我是做机器学习出身（自学“成才”），不可避免的就开始做Spark MLlib。我机器学习基础还算可以，而且切入MLlib的时候其中还只有很少的代码，很快便看懂了，并提供了一个logistic regression梯度函数的bug fix。那段时间还接触了SSP，就是邢波教授他们做的东西。后来觉得SSP这个玩意儿拿C++写简直痛苦，于是自己拿AKKA搭了个玩具，并写了篇Demo paper，可惜paper后来没中，也失去了再投的乐趣，就搁置了。之后便一直研究MLlib，提供了很多pull requests，当然，被拒的也很多。2013年不仅做了很多Spark相关的内容，还研究了很多别的，如GraphLab，并写了一些技术文章投稿。感觉自己持续升温，天天开心。

2013年年底，小伙伴之一连城被Databricks招收了。当时我的梦想就是留在Intel。因为在我当时看来，Intel是个伟大的地方，在这里可以做很多神奇的事情，老板待人nice，很有人格魅力，也愿意帮我们提升外部的visibility，简直梦想啊。恰逢我马上要硕士毕业了（虽然被学校老板威胁不让毕业），纠结片刻便向老板提出转正的期望。不过那段时候不好，恰逢Intel裁员。后来费尽力气，总算是争取一个名额，我如愿以偿的成为了一名Research Scientist。记得当时HR给我打电话，我开心的不得了。什么薪水股票我都不关心，我只问了HR一个问题，谁是我的老板。显然，就是之前的老板当我老板。因为我一直都觉得，跟对人很重要，其他的不重要。

## Part 2，失落的2014

2014年春节回来，顺利毕业开心！之后便是紧张的毕业手续和Intel的正式入职。此时Intel发生了一些变动，我老板因为工作太出色，出任英特尔中国研究院院长。当时我就傻傻的想，我老板是院长，那我岂不是也会很牛逼？然而事实总是残酷，作为小弟的我是不可能随着院长一起走的，因此我成了我老板小弟的小弟。并跟之前不太熟悉的一些同事一起组成team。

当时心有不甘啊，刚毕业的新人也傻傻的，有什么事情还是发邮件给原老板。老板很nice的找我，说以后你要report给我小弟了，毕竟他是你的老板。那是我就懂了，公司不是你家，踏实做事吧。后来整个team的成员要坐到一起，都整体搬到了另一个楼层，彻底远离了原老板，基本上个把月见不到一次的情况。渐渐死心。

新team有新项目，可惜我不能再继续把Spark当做主业了。有几个原来跟AMPLab/Databricks合作的机会也只能cancel掉。一开始我真的很难适应新team，开会的时候别的同事在激烈的发言谈论一个项目，我基本上不说话静静坐在那里，脑子里不知道在转什么。

此时Intel的弊端又显现了，研究院的弊端也显现了。Intel的弊端就是没有数据。没有数据，只能自娱自乐，做的一切都感觉毫无根据。研究院的弊端是发论文比不过学校，做项目比不过其他部门。简直是很尴尬的存在。我作为一个machine learner，为了能做些实在的事情（而不仅仅是写几篇技术文章），只能陪着新老板去跑项目，跟那些人吃吃喝喝，谈谈需求，写写文档，写写ppt，过了好长一段不写代码的时间。现在看着我Github账号中contribution中空白的一大片（from May to Nov），就感觉一阵空虚。我觉得吧，像我这种刚毕业的人，就应该多写代码磨练水平，结果却做了太多不是我年纪应该做的事情。

那时我还想着，或许会变好呢？

## Part 3，一起走吧！

最初得知老婆有出国读博计划的时候，我们还是普通朋友。那时一心念着她，得知她有此雄心壮志，心中又是吃惊又是难过。吃惊是觉得她水平一般（其实后来渐渐发现不是），难过是觉得我要失败了，因为我不打算出国。让我没有料到的是最后竟然让我追到手了。记得又一次她说：“我们现在在一起很快乐，但是一年后的今天，我们是否还会在一个城市里？”那一刻我知道，为了将来，我不可能再把自己当成鸵鸟，以为不在面对这件事它就能自己过去。虽然当时还不理解老婆坚决出国的原因，但是我妥协了，因为她是我的爱人，我要想尽办法帮她实现愿望。后面几个月我们一起紧张的选学校，选地点，写简历，推荐信，填表格，写SoP。每天白天要上班，她在MSRA实习做GraphX，每晚我们还要一起搞这些搞到凌晨一两点。

大概2014年12月份，老婆该投的都投完了。这是老婆说“该找工作了吧？”。当时我对老婆拿到offer不太有信心，而且我还是不太想出国，觉得英特尔还是很好。就这样一直憋到2015年一月份。期间还小吵了两次。一月份的时候终于把老婆气哭了，也渐渐明白了她的执着。正好时间也不多了，开始找工作！（我突然觉得我就是拖延症重度患者。）

从一月初改简历改到一月中旬才改好，找了一些美国的小伙伴帮忙review，感激不尽！之后便是找人内推，自己也去申请了好多职位。最终发现，自己申请的全部都石沉大海！当时很是震惊，也比较失落。后来渐渐地有了一些公司联系我，因为有人内推。逐渐拿到了Google，Facebook的面试机会。本人算法非常差，于是开始猛刷leetcode，花了三个星期做完所有题目，每天写代码到半夜一两点，早上四五点睡不着就起来写题，也是为自己猛烈的火力震惊了。现在回头看到Github上一片深绿，都觉得功夫没白费。刷题不仅让我有了面试的保障，确实也让我提升了算法能力。

最后算下来，这一个多月总共拿到了Google，Facebook，Twitter，Rubikloud，Microsoft五家公司的面试机会，无奈Google一面神奇的挂了，Facebook到二面没发挥好挂了，Microsoft面了一次后迟迟没有动静。Twitter经历了7轮面试，Rubikloud经历了四次面试加一轮小project作业，拿到了这两家的offer。Twitter和Rubikloud的招聘我都是在微博上看到的，感谢微博！老婆也几经挫折，拿到了USC博士的offer，跟着一个不错的professor，开心！

## Part4，总结

随时记得逼自己一下，否则你不会发现你能迸发多大的能量。如果生活一直都是顺风顺水，也许你就原地踏步了。（老婆的忠告）

2014年也算是很幸运的，把很多“不可能”变成了“可能”，在我还有大有活力的年纪（24-25）。

至于面经，虽然我都记下来了，但不知是否方便发出来，暂时先不放出来了。总结就是，写code很重要，一定要看到题目就能立马写出可执行无bug的代码，这是敲门砖。（记得twitter第五面的面试官看着我写的code，说 you are very good!这在一个月前对于我来说还是不可能的。）但是如果你面一些senior的职位，一定要有平时的积累，比如我平时对machine learning，对分布式系统和Spark的积累，以及做过的项目，这样才有竞争力。

